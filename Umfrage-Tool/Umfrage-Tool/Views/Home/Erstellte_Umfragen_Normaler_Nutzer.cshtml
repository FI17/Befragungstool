@model List<SurveyViewModel>
@using Domain;

<script src="~/Scripts/Home_View Seitenumbruch.js"></script>

@{
    List<List<SurveyViewModel>> Umfragen_Intervalle = new List<List<SurveyViewModel>>();
    int Anzahl_der_Umfragen_pro_Block = 15;
    int Zaehler = 0;
    int Anzahl_der_Fragen = Model.Count();

    do
    {
        Umfragen_Intervalle.Add(new List<SurveyViewModel>());
        for (int i = 0; i < Anzahl_der_Umfragen_pro_Block; i++)
        {
            if (Anzahl_der_Fragen > (Zaehler + i))
            {
                SurveyViewModel Umfrage = Model.ToList()[Zaehler + i];
                Umfragen_Intervalle.Last().Add(Umfrage);
            }
        }
        Zaehler += Anzahl_der_Umfragen_pro_Block;
    } while (Zaehler < Anzahl_der_Fragen);

    Session["Anzahl_der_Umfragen"] = Umfragen_Intervalle.Count;
}

@for (int i = 0; i < Umfragen_Intervalle.Count; i++)
{
    var Umfragen_Interval = Umfragen_Intervalle[i];
    <div id="Abschnitt_@i" style="display:none">
        <table class="table" style="margin-bottom:0px;">
            <tr style="border:none">
                <th style="border:none">
                    <p>Umfrage Name</p>
                </th>
                <th style="border:none">
                    <p>Link zur Beantwortung</p>
                </th>
                <th style="border:none">
                    <p>Link kopieren</p>
                </th>
                <th style="border:none">
                    <p></p>
                </th>
                <th style="border:none">
                    <p></p>
                </th>
                <th style="border:none">
                    <p></p>
                </th>
                <th style="border:none">
                    <p></p>
                </th>
            </tr>

            @foreach (var Umfrage in Umfragen_Interval)
            {
                if (Umfrage.states == Survey.States.InBearbeitung)
                {
                    string link = "http://localhost:60480/Umfrage_Beantwortung?arg=" + Umfrage.ID;
<tr>
                    <td>
                        <p>@Umfrage.name</p>
                    </td>
                    <td>
                        <a href="@link">@link</a>
                    </td>
                    <td>
                        @Html.ActionLink("Link kopieren", "Index", "Home", new { @class = "btn btn-info btn-xs", disabled = "disabled" })
                        @*<button class="btn btn-sm btn-info glyphicon glyphicon-file"></button>*@
                    </td>
                    <td>
                        @Html.ActionLink("auswerten", "Fragen_Ergebnisse", "Umfrage_Ergebnisse", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", disabled = "disabled" })
                    </td>
                    <td>
                        @Html.ActionLink("bearbeiten", "FrageErstellung", "Umfrage_Erstellung", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs" })
                    </td>
                    <td>
                        @Html.ActionLink("löschen", "Umfrage_loeschen", "Home", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", onclick = "return confirm_delete('" + Umfrage.name + "');", id = "loeschen", name = Umfrage.name })
                    </td>
                    <td>
                        @Html.ActionLink(Enum.GetName(typeof(Enums.StatenTextAusgabe), (int)Umfrage.states), "StatusWechseln", "Home", new { umfrageID = Umfrage.ID }, new { @class = "btn btn-info btn-xs" })
                    </td>
                </tr>
                }
                else if (Umfrage.states == Survey.States.Öffentlich)
                {
                    string link = "http://localhost:60480/Umfrage_Beantwortung?arg=" + Umfrage.ID;
                    <tr>
                        <td>
                            <p>@Umfrage.name</p>
                        </td>
                        <td>
                            <a href="@link">@link</a>
                        </td>
                        <td>
                            @Html.ActionLink("Link kopieren", "Index", "Home", new { @class = "btn btn-info btn-xs" })
                            @*<button class="btn btn-sm btn-info glyphicon glyphicon-file"></button>*@
                        </td>
                        <td>
                            @Html.ActionLink("auswerten", "Fragen_Ergebnisse", "Umfrage_Ergebnisse", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", disabled = "disabled" })
                        </td>
                        <td>
                            @Html.ActionLink("bearbeiten", "FrageErstellung", "Umfrage_Erstellung", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", disabled = "disabled" })
                        </td>
                        <td>
                            @Html.ActionLink("löschen", "Umfrage_loeschen", "Home", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", onclick = "return confirm_delete('" + Umfrage.name + "');", id = "loeschen", name = Umfrage.name, disabled = "disabled" })
                        </td>
                        <td>
                            @Html.ActionLink(Enum.GetName(typeof(Enums.StatenTextAusgabe), (int)Umfrage.states), "StatusWechseln", "Home", new { umfrageID = Umfrage.ID }, new { @class = "btn btn-info btn-xs" })
                        </td>
                    </tr>
                }
                else if (Umfrage.states == Survey.States.Beendet)
                {
                    string link = "http://localhost:60480/Umfrage_Beantwortung?arg=" + Umfrage.ID;
                    <tr>
                        <td>
                            <p>@Umfrage.name</p>
                        </td>
                        <td>
                            <a href="@link">@link</a>
                        </td>
                        <td>
                            @Html.ActionLink("Link kopieren", "Index", "Home", new { @class = "btn btn-info btn-xs", disabled = "disabled" })
                            @*<button class="btn btn-sm btn-info glyphicon glyphicon-file"></button>*@
                        </td>
                        <td>
                            @Html.ActionLink("auswerten", "Fragen_Ergebnisse", "Umfrage_Ergebnisse", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs" })
                        </td>
                        <td>
                            @Html.ActionLink("bearbeiten", "FrageErstellung", "Umfrage_Erstellung", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", disabled = "disabled" })
                        </td>
                        <td>
                            @Html.ActionLink("löschen", "Umfrage_loeschen", "Home", new { arg = Umfrage.ID }, new { @class = "btn btn-info btn-xs", onclick = "return confirm_delete('" + Umfrage.name + "');", id = "loeschen", name = Umfrage.name})
                        </td>
                        <td>
                            @Html.ActionLink(Enum.GetName(typeof(Enums.StatenTextAusgabe), (int)Umfrage.states), "StatusWechseln", "Home", new { umfrageID = Umfrage.ID }, new { @class = "btn btn-info btn-xs", disabled="disabled" })
                        </td>
                    </tr>
                }
            }

        </table>
        <div class="row">
            <div class="col-sm-5" style="text-align: right">

                <button class="btn btn-md btn-info" id="Zurückknopf_@i" onclick="vorherigen_Abschnitt_anzeigen(@i)">Zurück</button>

            </div>
            <div class="col-sm-2" style="text-align: center">
                Seite @(i + 1) von @Umfragen_Intervalle.Count
            </div>
            <div class="col-sm-5" style="text-align: left">
                <button class="btn btn-md btn-info" id="Weiterknopf_@i" onclick="nächsten_Abschnitt_anzeigen(@i)">Weiter</button>
            </div>
        </div>
    </div>

}
<script>
    var Ende = @Convert.ToInt32(Session["Anzahl_der_Umfragen"]);
    Ende = Ende - 1;
    document.getElementById("Abschnitt_0").style.display = "inline";
    document.getElementById("Zurückknopf_0").disabled = true;
    document.getElementById("Weiterknopf_"+Ende).disabled = true;
</script>
