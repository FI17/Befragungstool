@model List<SurveyViewModel>
@using Domain;

<script src="~/Scripts/Home_View Seitenumbruch.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

@{
    List<List<SurveyViewModel>> Umfragen_Intervalle = new List<List<SurveyViewModel>>();
    int Anzahl_der_Umfragen_pro_Block = 15;
    int Zaehler = 0;
    int Anzahl_der_Fragen = Model.Count();
    Session["zeige_Abschnitt"] = "0";
    do
    {
        Umfragen_Intervalle.Add(new List<SurveyViewModel>());
        for (int i = 0; i < Anzahl_der_Umfragen_pro_Block; i++)
        {
            if (Anzahl_der_Fragen > (Zaehler + i))
            {
                SurveyViewModel Umfrage = Model.ToList()[Zaehler + i];
                Umfragen_Intervalle.Last().Add(Umfrage);
            }
        }
        Zaehler += Anzahl_der_Umfragen_pro_Block;
    } while (Zaehler < Anzahl_der_Fragen);
    Session["zeige_Abschnitt"] = "0";
    Session["Anzahl_der_Umfragen"] = Umfragen_Intervalle.Count;
    int zaehlerFürErstelldatum = 0;
}
<div class="panel-body Tabellen-Body">

    <table class="table" id="Umfragen_Tabelle">
        <thead>
            <tr>
                <th onclick="sortiere_Tabelle(0)" width="25%">
                    Umfrage Name
                </th>

                <th width="30%">
                    Ersteller
                </th>
                <th colspan="4">

                </th>
                <th onclick="sortiere_Tabelle(6)" width="10%">
                    Status
                </th>
                <th onclick="sortiere_Tabelle(9)" width="5%">
                    Erstell-datum
                </th>
                <th onclick="sortiere_Tabelle(10)" width="5%" hidden>
                    Freigabe-datum
                </th>
                <th hidden>

                </th>
                <th hidden>

                </th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Umfragen_Intervalle.Count; i++)
            {
                var Umfragen_Interval = Umfragen_Intervalle[i];

                foreach (var Umfrage in Umfragen_Interval)
                {
                    string link = "http://localhost:60480/Umfrage_Beantwortung?arg=" + Umfrage.ID;
                    <tr class="Abschnitt_@i" style="display: none;">
                        <td>
                            <p class="ZeilenInhaltEinerUmfrage">@Umfrage.name</p>
                        </td>
                        <td>
                            <select id="Ersteller_Liste_@Umfrage.ID" onchange="var umf = '@Umfrage.ID';Ersteller_der_Umfrage_ändern(this.value, umf);" class="form-control ZeilenInhaltEinerUmfrage ErstellerSelectImHome">
                                @Html.Action("Ersteller_ändern", "Home")
                            </select>
                            <input id="Alter_Ersteller_@Umfrage.ID" type="text" hidden value="@Umfrage.Creator" />
                            <script>
                                document.getElementById("Ersteller_Liste_@Umfrage.ID").value = document.getElementById("Alter_Ersteller_@Umfrage.ID").value;
                            </script>
                        </td>

                        @if (Umfrage.states == Survey.States.InBearbeitung)
                    {
                            <td>
                                @Html.ActionLink(" ",
                       "FrageErstellung",
                            "Umfrage_Erstellung",
                            new { arg = Umfrage.ID },
                            new
                            {
                                @class = "btn btn-warning btn-md glyphicon glyphicon-pencil ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                data_toggle = "popover",
                                data_content = "Umfrage bearbeiten"
                            })
                            </td>
                            <td>
                                <button type="button" class="btn btn-warning btn-md ZeilenInhaltEinerUmfrage KnopfMitIcon glyphicon glyphicon-file" onclick="kopiereLink('@link')" disabled="disabled" data-toggle="popover" data-content="Link zur Beantwortung kopieren"></button>
                            </td>
                            <td>
                                @Html.ActionLink(" ",
                                "Fragen_Ergebnisse", "Auswertung_kumuliert",
                                new { arg = Umfrage.ID },
                                new
                                {
                                    @class = "btn btn-warning btn-md glyphicon glyphicon-eye-open ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                    data_toggle = "popover",
                                    data_content = "Umfrage auswerten",
                                    disabled = "disabled"
                                })
                            </td>

                            <td>
                                @Html.ActionLink(" ",
                                "Umfrage_loeschen",
                                "Home",
                                new { arg = Umfrage.ID },
                                new
                                {
                                    @class = "btn btn-warning btn-md glyphicon glyphicon-remove ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                    onclick = "return confirm_delete('" + Umfrage.name + "');",
                                    id = "loeschen",
                                    name = Umfrage.name,
                                    data_toggle = "popover",
                                    data_content = "Umfrage löschen"
                                })
                            </td>
                            <td>
                                <p hidden>1</p>
                                @Html.ActionLink(Enum.GetName(typeof(Enums.StatenTextAusgabe), (int)Umfrage.states), "StatusWechseln", "Home", new { umfrageID = Umfrage.ID }, new { @class = "btn btn-warning btn-md ZeilenInhaltEinerUmfrage KnopfMitText", onclick = "return veröffentlichen_bestätigen()" })
                            </td>
                        }
                        else if (Umfrage.states == Survey.States.Öffentlich)
                        {
                            <td>
                                @Html.ActionLink(" ",
                            "FrageErstellung",
                            "Umfrage_Erstellung",
                            new { arg = Umfrage.ID },
                            new
                            {
                                @class = "btn btn-warning btn-md glyphicon glyphicon-pencil ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                data_toggle = "popover",
                                data_content = "Umfrage bearbeiten",
                                disabled = "disabled"
                            })
                            </td>
                            <td>
                                <button type="button" class="btn btn-warning btn-md ZeilenInhaltEinerUmfrage KnopfMitIcon glyphicon glyphicon-file" onclick="kopiereLink('@link')" data-toggle="popover" data-content="Link zur Beantwortung kopieren"></button>
                            </td>
                            <td>
                                @Html.ActionLink(" ",
                                "Fragen_Ergebnisse", "Auswertung_kumuliert",
                                new { arg = Umfrage.ID },
                                new
                                {
                                    @class = "btn btn-warning btn-md glyphicon glyphicon-eye-open ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                    data_toggle = "popover",
                                    data_content = "Umfrage auswerten",
                                    disabled = "disabled"
                                })
                            </td>

                            <td>
                                @Html.ActionLink(" ",
                                "Umfrage_loeschen",
                                "Home",
                                new { arg = Umfrage.ID },
                                new
                                {
                                    @class = "btn btn-warning btn-md glyphicon glyphicon-remove ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                    onclick = "return confirm_delete('" + Umfrage.name + "');",
                                    id = "loeschen",
                                    name = Umfrage.name,
                                    data_toggle = "popover",
                                    data_content = "Umfrage löschen",
                                    disabled = "disabled"
                                })
                            </td>
                            <td>
                                <p hidden>2</p>
                                @Html.ActionLink(Enum.GetName(typeof(Enums.StatenTextAusgabe), (int)Umfrage.states), "StatusWechseln", "Home", new { umfrageID = Umfrage.ID }, new { @class = "btn btn-warning btn-md ZeilenInhaltEinerUmfrage KnopfMitText", onclick = "return beenden_bestätigen()" })
                            </td>
                        }
                        else if (Umfrage.states == Survey.States.Beendet)
                        {
                            <td>
                                @Html.ActionLink(" ",
                            "FrageErstellung",
                            "Umfrage_Erstellung",
                            new { arg = Umfrage.ID },
                            new
                            {
                                @class = "btn btn-warning btn-md glyphicon glyphicon-pencil ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                data_toggle = "popover",
                                data_content = "Umfrage bearbeiten",
                                disabled = "disabled"
                            })
                            </td>
                            <td>
                                <button type="button" class="btn btn-warning btn-md ZeilenInhaltEinerUmfrage KnopfMitIcon glyphicon glyphicon-file" onclick="kopiereLink('@link')" disabled="disabled" data-toggle="popover" data-content="Link zur Beantwortung kopieren"></button>
                            </td>
                            <td>
                                @Html.ActionLink(" ",
                                "Fragen_Ergebnisse", "Auswertung_kumuliert",
                                new { arg = Umfrage.ID },
                                new
                                {
                                    @class = "btn btn-warning btn-md glyphicon glyphicon-eye-open ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                    data_toggle = "popover",
                                    data_content = "Umfrage auswerten"
                                })
                            </td>

                            <td>
                                @Html.ActionLink(" ",
                                "Umfrage_loeschen",
                                "Home",
                                new { arg = Umfrage.ID },
                                new
                                {
                                    @class = "btn btn-warning btn-md glyphicon glyphicon-remove ZeilenInhaltEinerUmfrage KnopfMitIcon",
                                    onclick = "return confirm_delete('" + Umfrage.name + "');",
                                    id = "loeschen",
                                    name = Umfrage.name,
                                    data_toggle = "popover",
                                    data_content = "Umfrage löschen"
                                })
                            </td>
                            <td>
                                <p hidden>3</p>
                                @Html.ActionLink(Enum.GetName(typeof(Enums.StatenTextAusgabe), (int)Umfrage.states), "StatusWechseln", "Home", new { umfrageID = Umfrage.ID }, new { @class = "btn btn-warning btn-md ZeilenInhaltEinerUmfrage KnopfMitText", disabled = "disabled" })
                            </td>
                        }
                        <td>
                            @Umfrage.creationTime.ToString("d")
                        </td>
                        <td hidden>
                            <p class="ZeilenInhaltEinerUmfrage">
                                00.00.0000
                            </p>
                        </td>
                        <td hidden>
                            @zaehlerFürErstelldatum
                        </td>
                        <td hidden>
                            @zaehlerFürErstelldatum
                        </td>
                    </tr>
                    zaehlerFürErstelldatum++;
                }

            }
        </tbody>
    </table>

    @for (int i = 0; i < Umfragen_Intervalle.Count; i++)
    {
        <div class="row" id="Abschnitt_Boden_@i" style="display: none;">
            <div class="col-sm-5" style="text-align: right">
                <button class="btn btn-lg btn-warning KnopfMitText" id="Zurückknopf_@i" onclick="vorherigen_Abschnitt_anzeigen(@i)">Zurück</button>
            </div>
            <div class="col-sm-2" style="text-align: center">
                Seite @(i + 1) von @Umfragen_Intervalle.Count
            </div>
            <div class="col-sm-5" style="text-align: left">
                <button class="btn btn-lg btn-warning KnopfMitText" id="Weiterknopf_@i" onclick="nächsten_Abschnitt_anzeigen(@i)">Weiter</button>
            </div>
        </div>
    }
</div>


<script>
    PopoverAktivieren();
    var Ende = @Convert.ToInt32(Session["Anzahl_der_Umfragen"]);
    Ende = Ende - 1;
    var liste = document.getElementsByClassName("Abschnitt_0");

    for (var i = 0; i < liste.length; i++) {
        liste[i].style.display = "table-row";
    }
    document.getElementById("Abschnitt_Boden_0").style.display = "block";

    document.getElementById("Zurückknopf_0").disabled = true;
    document.getElementById("Weiterknopf_"+Ende).disabled = true;
</script>

