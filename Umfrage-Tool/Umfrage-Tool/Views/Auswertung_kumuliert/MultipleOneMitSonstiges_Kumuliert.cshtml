@model Umfrage_Tool.QuestionViewModel
<link href="~/Content/Auswertung.css" rel="stylesheet" type="text/css" />
@* Kumulieren der gegebenen Antworten *@
@{
    Dictionary<string, int> antworten = new Dictionary<string, int>();
    Dictionary<string, int> antwortenSonstiges = new Dictionary<string, int>();
    foreach (var antwort in Model.choices)
    {
        string index = antwort.text;
        antworten[index] = 0;
    }
    foreach (var beantwortung in Model.givenAnswerViewModels)
    {
        string index = beantwortung.text;
        if (!antworten.ContainsKey(index))
        {
            antwortenSonstiges[index] = 0;
        }
    }
    foreach (var beantwortung in Model.givenAnswerViewModels)
    {
        string index = beantwortung.text;
        if (antworten.ContainsKey(index))
        {
            antworten[index]++;
        }
        else
        {
            antwortenSonstiges[index]++;
        }
    }
}
@* Tabellenkopf *@
@{
    <tr>
        <th colspan="3">
            <label>Ausgewählte Antworten</label>
        </th>
    </tr>
    <tr>
        <th class="spalteAntwortText">
            <label>
                Antwort:
            </label>
        </th>
        <th class="spalteAntwortAnzahl">
            <label>
                Anzahl:
            </label>
        </th>
        <th class="spalteAntwortProzent">
            <label>
                Anteil in Prozent:
            </label>
        </th>
    </tr>
}
@* Auflisten der einzelnen Antworten *@
@{
    int häufigsteAntwort = antworten.OrderByDescending(d => d.Value).First().Value;
    int gesamtmengeDerGegebenenAntworten = 0;
    foreach (var beantwortung in antworten)
    {
        gesamtmengeDerGegebenenAntworten += beantwortung.Value;
    }
    foreach (var beantwortung in antworten.OrderByDescending(d => d.Value))
    {
        string styleFürHäufigstenEintrag = "";
        int häufigkeitDerGegebenenAntwort = beantwortung.Value;
        string textDerGegebenenAntwort = beantwortung.Key;
        if (häufigkeitDerGegebenenAntwort == häufigsteAntwort)
        {
            styleFürHäufigstenEintrag = "größterEintrag";
        }
        <tr class="antwortzeile">
            <td class="@styleFürHäufigstenEintrag">
                <div class="radio" style="margin:0;padding:0">
                    <label>
                        <input type="radio" name="@Model.ID" disabled  class="AuswahlKnopfInBeantwortung"/>
                        <b>
                            @textDerGegebenenAntwort
                        </b>
                    </label>
                </div>
            </td>
            <td class="@styleFürHäufigstenEintrag">
                @häufigkeitDerGegebenenAntwort
            </td>
            <td class="@styleFürHäufigstenEintrag">
                @if (gesamtmengeDerGegebenenAntworten != 0)
                {
                    @Math.Round(häufigkeitDerGegebenenAntwort / (double)gesamtmengeDerGegebenenAntworten * 100, 2)
                }
                else
                {
                    @Html.Raw("0")
                }
                %
            </td>
        </tr>
    }
}
@* Zweiter Tabellenkopf *@
@{
    <tr>
        <th colspan="4">

        </th>
    </tr>
    <tr>
        <th colspan="3">
            <label>
                Sonstiges Antworten
            </label>
        </th>
    </tr>
    <tr>
        <th class="spalteAntwortText">
            <label>
                Antwort:
            </label>
        </th>
        <th class="spalteAntwortAnzahl">
            <label>
                Anzahl:
            </label>
        </th>
        <th class="spalteAntwortProzent">
            <label>
                Anteil in Prozent:
            </label>
        </th>
    </tr>
}
@* Auflisten der Sonstiges-Antworten*@
@{
    int gesamtmengeDerGegebenenAntwortenSonstiges = 0;
    foreach (var beantwortung in antwortenSonstiges)
    {
        gesamtmengeDerGegebenenAntwortenSonstiges += beantwortung.Value;
    }
    foreach (var beantwortung in antwortenSonstiges.OrderByDescending(d => d.Value))
    {
        int häufigkeitDerGegebenenAntwort = beantwortung.Value;
        string textDerGegebenenAntwort = beantwortung.Key;
        <tr class="antwortzeile">
            <td>
                <b>
                    @textDerGegebenenAntwort
                </b>
            </td>
            <td>
                @häufigkeitDerGegebenenAntwort
            </td>
            <td>
                @Math.Round(häufigkeitDerGegebenenAntwort / (double)gesamtmengeDerGegebenenAntwortenSonstiges * 100, 2) %
            </td>
        </tr>
    }
} 