@model QuestionViewModel
<link href="~/Content/Fragebogen.css" rel="stylesheet" type="text/css"/>
<link href="~/Content/Vorschau.css" rel="stylesheet" type="text/css" media="print"/>
<link href="~/Content/Erstellung-Bearbeitung.css" rel="stylesheet">
@{
    var frage = Model;
    var PositionBeiAntwortmöglichkeitBearbeiten = frage.position + 1;
}
@foreach (var antwort in frage.choices.OrderBy(z => z.position))
{
    <div class="row AbstandVonFragenUndAntworten">
        <div class="col-sm-3 MultipleChoiceDiv">
            <input type="radio" disabled class="AuswahlKnopf"/>
        </div>
        <div class="col-sm-7">
            <input id="@frage.choices.ToList().IndexOf(antwort)+FeldSkala+@frage.ID"
                   value="@antwort.text"
                   label="@antwort"
                   type="text"
                   class="form-control MultipleChoiceText NormalerText"
                   name="model.questionViewModels[@frage.position].choices[@antwort.position].text"
                   maxlength="250"
                   required/>
        </div>
        <div class="col-sm-2">
            <button id="@PositionBeiAntwortmöglichkeitBearbeiten"
                    name="subject"
                    type="submit"
                    value="AntwortLöschen/@antwort.position#@frage.ID"
                    class="btn btn-warning glyphicon glyphicon-remove KnopfMitIcon KleinerKnopf"
                    onclick="return jaNein_Antwort();" 
                    formnovalidate>               
            </button> <br/>
        </div>
    </div>
}
@if (frage.choices.Count < 15)
{
    <div class="row">
        <div class="col-sm-5 col-sm-offset-4">
            <button id="@PositionBeiAntwortmöglichkeitBearbeiten" name="subject" type="submit" value="Plus_Antwort/@frage.ID" class="btn btn-warning Volle_Breite glyphicon glyphicon-plus KnopfMitIcon AntwortPlusKnopf"></button>
        </div>
    </div>
}
