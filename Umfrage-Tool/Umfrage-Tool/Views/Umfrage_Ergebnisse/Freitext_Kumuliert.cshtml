@model Umfrage_Tool.QuestionViewModel
@* Kumulieren der gegebenen Antworten *@
@{
    Dictionary<string, int> antworten = new Dictionary<string, int>();
    foreach (var beantwortung in Model.answeringViewModels)
    {
        string index = beantwortung.text;
        antworten[index] = 0;
    }
    foreach (var beantwortung in Model.answeringViewModels)
    {
        string index = beantwortung.text;
        antworten[index]++;
    }
    int anzahl_der_Zeilen = antworten.Count() + 1;
}
@* Tabellenkopf *@
@{
    <tr>
        <th class="Kopfzeile" rowspan="@anzahl_der_Zeilen">
        </th>
        <th>
            Antwort:
        </th>
        <th>
            Anteil:
        </th>
        <th>
            Anteil in Prozent:
        </th>
    </tr>
}
@* Auflisten der einzelnen Antworten *@
@{
    int haeufigste_Antwort = antworten.OrderByDescending(d => d.Value).First().Value;
    int gesamtmenge_der_gegebenen_Antworten = Model.answeringViewModels.Count();
    foreach (var beantwortung in antworten.OrderByDescending(d => d.Value))
    {
        string klasse_fuer_Groessten_Eintrag = "";
        int haeufigkeit_der_gegebenen_Antwort = beantwortung.Value;
        string text_der_gegebenen_Antwort = beantwortung.Key;
        if (haeufigkeit_der_gegebenen_Antwort == haeufigste_Antwort)
        {
            klasse_fuer_Groessten_Eintrag = "Groesster_Eintrag";
        }
        <tr class="@klasse_fuer_Groessten_Eintrag Antwortenzeile">
            <td>
                <b>
                    @text_der_gegebenen_Antwort
                </b>
            </td>
            <td>
                @haeufigkeit_der_gegebenen_Antwort
            </td>
            <td>
                @Math.Round((double)haeufigkeit_der_gegebenen_Antwort / (double)gesamtmenge_der_gegebenen_Antworten * 100, 2) %
            </td>
        </tr>
    }
}