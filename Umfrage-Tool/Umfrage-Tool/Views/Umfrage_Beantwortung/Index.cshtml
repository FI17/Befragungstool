@using Domain
@model SurveyViewModel
@{
    ViewBag.Title = "Umfrage beantworten";
    Layout = null;
}

@Styles.Render("~/Content/css")
@Scripts.Render("~/bundles/modernizr")

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
<link href="~/Content/Fragebogen.css" rel="stylesheet" type="text/css" media="print" />
@*<link href="~/Content/Home.css" rel="stylesheet" type="text/css" media="print" />*@

@if (Model.states == Survey.States.Öffentlich)
{
    using (Html.BeginForm("Index", "Umfrage_Beantwortung", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        List<List<QuestionViewModel>> Fragen = new List<List<QuestionViewModel>>();
        int Anzahl_der_Fragen_pro_Block = 3;
        int Zaehler = 0;
        int Anzahl_der_Fragen = Model.questionViewModels.Count();

        do
        {
            Fragen.Add(new List<QuestionViewModel>());
            for (int i = 0; i < Anzahl_der_Fragen_pro_Block; i++)
            {
                if (Anzahl_der_Fragen > (Zaehler + i))
                {
                    QuestionViewModel Frage = Model.questionViewModels.ToList()[Zaehler + i];
                    Fragen.Last().Add(Frage);
                }
            }
            Zaehler += Anzahl_der_Fragen_pro_Block;
        } while (Zaehler < Anzahl_der_Fragen);

        <div id="PanelFürUmfrage" class="panel" style="margin: 5%; border-left: 10px; border-right: 10px">
            <div class="panel-heading Tabellen-Header">
                <h2> @Model.name </h2>
            </div>

            <div id="hauptpanelFürAutomatischesEinklappen" class="panel-body panel-warning Tabellen-Body" >

                @for (int i = 0; i < Fragen.Count(); i++)
                {
                    string verstecke_Panel = "";
                    if (i == 0)
                    {
                        verstecke_Panel = "in";
                    }

                    <div class="panel" style="margin: 0; border: 0;">
                        <div id="Fragen_Block_@Fragen[i].First().ID" class="panel-collapse collapse @verstecke_Panel  Fragen_Block">

                            @if (i != 0)
                            {
                                <button type="button" onclick="ZurueckClick()" class="btn btn-md btn-warning KnöpfeFürBeantwortung KnopfMitText KleinerKnopf" data-toggle="collapse" data-parent="#hauptpanelFürAutomatischesEinklappen" data-target="#Fragen_Block_@Fragen[i - 1][0].ID">
                                    Zurück
                                </button>
                            }

                            <div class="panel-body Tabellen-Body">
                                @for (int j = 0; j < Fragen[i].Count(); j++)
                                {
                                    QuestionViewModel zu_uebergebene_Frage = Fragen[i][j];
                                    switch (zu_uebergebene_Frage.type)
                                    {
                                        case Domain.Question.choices.Freitext:
                                            @Html.Action("Freitext", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                        case Domain.Question.choices.MultipleOne:
                                            @Html.Action("MultipleOne", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                        case Domain.Question.choices.Skalenfrage:
                                            @Html.Action("Skalenfrage", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                        case Domain.Question.choices.MultipleMore:
                                            @Html.Action("MultipleMore", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                        case Domain.Question.choices.MultipleOneMitSonstiges:
                                            @Html.Action("MultipleOneMitSonstiges", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                        case Domain.Question.choices.MultipleMoreMitSonstiges:
                                            @Html.Action("MultipleMoreMitSonstiges", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                        default:
                                            @Html.Action("Freitext", "Umfrage_Beantwortung", zu_uebergebene_Frage)
                                            ;
                                            break;
                                    }
                                }
                            </div>

                            @if (Fragen[i] != Fragen.Last())
                            {
                                <button type="button" onclick="WeiterClick()" class="btn  btn-md  btn-warning KnöpfeFürBeantwortung KnopfMitText KleinerKnopf" data-toggle="collapse" data-parent="#hauptpanelFürAutomatischesEinklappen" data-target="#Fragen_Block_@Fragen[i + 1][0].ID">
                                    Weiter
                                </button>
                            }
                        </div>
                    </div>
                }

            </div>
            <div id="PanelFooter" class="panel-footer Tabellen-Footer">
                <input id="Fertigknopf" onclick="AlleAusgeführt()" name="Wert_Bestätigungsknopf" type="submit" class="btn btn-lg btn-warning KnöpfeFürBeantwortung KnopfMitText" value="Fertigstellen" />
            </div>
        </div>
        <script type="text/javascript">
            anzahlFragen = @Model.questionViewModels.Count();
            fragenProSeite = 3;
            momentanAnzahl = 3;
            alleBeantwortet = false;

            function WeiterClick() {
                if (alleBeantwortet == false) {
                    momentanAnzahl = momentanAnzahl + fragenProSeite;
                    if (momentanAnzahl >= anzahlFragen) {
                        alleBeantwortet = true;
                    }
                }
            }

            function ZurueckClick() {
                if (alleBeantwortet == false) {
                    momentanAnzahl = momentanAnzahl - fragenProSeite;
                }
            }

            function AlleAusgeführt() {
                var benötigteFelder = document.getElementById("hauptpanelFürAutomatischesEinklappen").querySelectorAll("[required]");
                var benötigteFelderNurText = [];
                var eineFrageWurdeNochNichtBeantwortet = false;

                for (var i = 0; i < benötigteFelder.length; i++) {
                    var benötigtesFeld = benötigteFelder[i];
                    if (benötigtesFeld.disabled==false&&
                        benötigtesFeld.classList.contains("AntwortFeldFuerBeantwortung")) {
                        benötigteFelderNurText.push(benötigtesFeld);
                    }
                }

                var meldung = "";

                for (var i = 0; i < benötigteFelderNurText.length; i++) {
                    var benötigtesFeld = benötigteFelderNurText[i];
                    benötigtesFeld.style.borderColor = "#ccc";
                    if (benötigtesFeld.value.length == 0 && 
                        benötigtesFeld.classList.contains("MultipleMore")==false) {
                        benötigtesFeld.style.borderColor = "red";
                        meldung += "Frage " + (i+1) + " wurde nicht beantwortet!\n";
                        eineFrageWurdeNochNichtBeantwortet = true;
                    }
                }

                if (alleBeantwortet == false && anzahlFragen > 3||eineFrageWurdeNochNichtBeantwortet==true) {
                    window.alert("Sie haben nicht alle Fragen beantwortet.");
                    //window.alert(meldung);
                    event.preventDefault();
                } else {
                    alleBeantwortet = true;
                }
                return alleBeantwortet;

            }
        </script>
    }
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Styles.Render("~/Content/Home.css")